---
import type { Frontmatter } from '../config'
import SEO from '../components/seo.astro'
import Header from '../components/header.astro'
import Footer from '../components/footer.astro'
import SiteCredit from '../components/sitecredit.astro'
import _ from 'lodash';
import '../static/styles/index.css'
import { Icon } from 'astro-icon'

export interface Props {
  frontmatter: Frontmatter
}

const { frontmatter } = Astro.props



---

<!DOCTYPE html>
<html lang="en" class=" motion-safe:scroll-smooth motion-reduce:auto ">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link
      rel="icon"
      type="image/x-icon"
      href={new URL(import.meta.env.BASE_URL + 'favicon.ico', Astro.url)}
    />
    <link rel="apple-touch-icon" sizes="180x180" href={new URL(import.meta.env.BASE_URL + 'apple-touch-icon.png', Astro.url)}>
    <link rel="icon" type="image/png" sizes="32x32" href={new URL(import.meta.env.BASE_URL + 'favicon-32x32.png', Astro.url)} >
    <link rel="icon" type="image/png" sizes="16x16" href={new URL(import.meta.env.BASE_URL + 'favicon-16x16.png', Astro.url)}>
    <meta name="generator" content={Astro.generator} />
    <link rel="manifest" href={new URL(import.meta.env.BASE_URL + 'site.webmanifest', Astro.url)}>
    <link rel="mask-icon" href={new URL(import.meta.env.BASE_URL + 'safari-pinned-tab.svg', Astro.url)}>
    <meta name="msapplication-TileColor" content="#000000">
    <meta name="theme-color" content="#000000">

    <SEO frontmatter={frontmatter} />
    <script is-inline>
      if (
        localStorage.theme === 'dark' ||
        (!('theme' in localStorage) &&
          window.matchMedia('(prefers-color-scheme: dark)').matches)
      ) {
        document.documentElement.classList.add('dark')
      } else {
        document.documentElement.classList.remove('dark')
      }
    </script>

    <script>
      import Alpine from 'alpinejs'
      if (typeof window !== 'undefined') {

        document.addEventListener("alpine:init", () => {
          Alpine.store("mobileMenu", () => ({
            isOpen: false,
            lastScrollTopPosition: 0,

            toggle() {
              if (!this.isOpen) {
                this.lastScrollTopPosition = window.scrollY
                document.body.style.height = '100vh'
                document.body.style.overflow = 'hidden'
              }

              console.log(this.lastScrollTopPosition, this.isOpen);
              this.isOpen = !this.isOpen

              if (!this.isOpen) {
                document.body.style.height = 'auto'
                document.body.style.overflowY = 'visible'
                window.scrollTo(0, this.lastScrollTopPosition)
              }
            },
          }))
        })
        // Alpine.start()
      }
    </script>

    <script>
      import Alpine from 'alpinejs'
      import intersect from '@alpinejs/intersect'

      if (typeof window !== 'undefined') {
        Alpine.plugin(intersect)
        // Alpine.start()
      }
    </script>

    <script>
      import Alpine from 'alpinejs'
      if (typeof window !== 'undefined') {
        Alpine.start()
      }
    </script>

    <script>
      import _ from 'lodash';
      if (typeof window !== 'undefined') {
        window.addEventListener('scroll', _.throttle(() => {
          if (typeof window === 'undefined') return;
          // const tl = gsap.timeline({paused: true, reversed: true});
          const page = document.documentElement;
          const offset = page.scrollTop;
          const backToTop = document.querySelector('.back-to-top') as HTMLElement;
          const siteCredit = document.querySelector('.site-credit') as HTMLElement;

          if (offset > 1200) {
            backToTop.classList.remove('invisible');
            // siteCredit.classList.remove('invisible');
          } else {
            backToTop.classList.add('invisible');
            // siteCredit.classList.add('invisible');
          }

          if (offset > page.scrollHeight - window.innerHeight - 100) {
            siteCredit.classList.remove('invisible');
          } else {
            siteCredit.classList.add('invisible');
          }
          // tl.play();
        }, 200));
      }
    </script>

    <style is:inline>
      [x-cloak] { display: none !important; }
      </style>

    {frontmatter.extra?.includes('math') &&
      <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.16.1/dist/katex.min.css" integrity="sha384-pe7s+HmY6KvqRkrRRUr4alQJ0SkmzCft3RpK1ttGMa7qk8Abp/MEa/4wgceRHloO" crossorigin="anonymous" />}
    {frontmatter.extra?.includes('markmap') &&
      <style>
        .markmap > svg {
          width: 100%;
          height: 400px;
        }
        </style>
      }
    <slot name="in-head" />
    </head>
    <body
      x-ref="body"
      x-data
    >
      {frontmatter.extra?.includes('mermaid') &&
        <script src="https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js"></script>
        <script>
          // @ts-ignore
          mermaid.initialize({startOnLoad:true});
        </script>
      }
      <Header />
      <slot />
      <Footer />
      <a href="#top" class="group inline-flex invisible items-center back-to-top py-3 text-sm 2xl:text-base text-normal uppercase font-sans fixed bottom-8 right-2 xl:bottom-24 2xl:right-16 z-40 transition-all duration-300 ease-in-out">Top  <Icon pack="emojione-monotone" name="index-pointing-up" class='h-5 w-5 2xl:h-8 2xl:w-8 inline '/></a>

      <SiteCredit />

      {frontmatter.extra?.includes('markmap') &&
        <script src="https://cdn.jsdelivr.net/npm/markmap-autoloader"></script>
      }
  </body>
</html>


